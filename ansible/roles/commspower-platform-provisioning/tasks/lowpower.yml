# SPDX-License-Identifier: BSD-3-Clause
# Copyright(c) 2020-21 Intel Corporation

---
# Check Cstate driver enabled
- include_tasks: check_cstate_driver.yml
  when: state == "present"

# Find the C states above C0 from sysfs path files.
- name: Find C states sysfs, state1,state2... stateN, excluding state0.
  find:
    paths: /sys/devices/system/cpu/cpu{{ core_id }}/cpuidle
    recurse: no
    file_type: directory
    excludes: 'state0'
  register: cstate_paths
  with_items: "{{ action_tobe.core_list }}"
  loop_control:
    loop_var: core_id
  changed_when: false
  ignore_errors: yes

- name: print c6state
  debug:
    msg: "{{ action_tobe.c6state}}"

# enable only C6 state
- name: enable the c6 cstate
  shell: |
     echo "0" > {{ cspaths1.invocation.module_args.paths[0] }}/\
     state{{cspaths1.matched}}/disable
  with_items: "{{ cstate_paths.results|flatten(levels=2) }}"
  loop_control:
    loop_var: cspaths1
  when: (action_tobe.c6state is defined) and (action_tobe.c6state == 'on')

# disable only C6 state
- name: disable the c6 cstate
  shell: |
     echo "1" > {{ cspaths1.invocation.module_args.paths[0] }}/\
     state{{cspaths1.matched}}/disable
  with_items: "{{ cstate_paths.results|flatten(levels=2) }}"
  loop_control:
    loop_var: cspaths1
  when: (action_tobe.c6state is defined) and (action_tobe.c6state == 'off')

# Create provisioning status dir
- include_tasks: check_provisioning_dir.yml

# Create the empty file to indicate powersaving provisioning is done.
- name: Create lowpower provisioning done file
  file:
    path: "{{ prov_status_dir }}/lowpower"
    state: touch
    owner: root
    group: root
    mode: 0644
